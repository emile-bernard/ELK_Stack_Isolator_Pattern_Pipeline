from plumbum import local, FG, RETCODE
from avdlogger import lpl
import sys
import os


def get_env(env_var, if_none=''):
    return os.environ[env_var] if env_var in os.environ.keys() else if_none


AVD_LOGPATH = os.path.expanduser(get_env('AVD_LOGPATH'))


class AVDRunner:

    @classmethod
    def main(self):
        args = sys.argv[1:]
        cmd_name = args[0]
        cmd_param = args[1:]

        to_file = '{}/avdrunner.log'.format(AVD_LOGPATH) if AVD_LOGPATH else None

        lpl.init_logger('AVDRunner', to_stream=False, to_file=to_file)

        cmd = local[cmd_name]
        lpl.info('Running {} with params {}'.format(cmd_name, cmd_param))
        exit_code = cmd[cmd_param] & RETCODE(FG=True)
        lpl.info('{} completed. exit_code: {}'.format(cmd_name, exit_code))
        if exit_code != 0:
            lpl.error('Command {} with params {} FAILED'.format(cmd_name, cmd_param))


if __name__ == "__main__":
    AVDRunner.main()
